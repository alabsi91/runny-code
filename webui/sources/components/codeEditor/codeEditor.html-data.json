{
  "version": 1.1,
  "tags": [
    {
      "name": "code-editor",
      "description": {
        "kind": "markdown",
        "value": "# code-editor\n\nA simple code editor component that can highlight code.\n\n**Usage**\n\n```html\n<link\n  rel=\"stylesheet\"\n  href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/styles/atom-one-dark-reasonable.min.css\"\n  class=\"code-highlight\"\n/>\n\n<code-editor stylesheet=\".code-highlight\">\n  <pre>console.log(\"Hello World!\");</pre>\n</code-editor>\n```\n\n- Attach a highlighter function.\n\n```js\nconst editor = document.querySelector(\"code-editor\");\neditor.highlighter = code => hljs.highlight(code, { language: \"typescript\" }).value;\n```\n\n**Props**\n\n- `value` (Get/Set) The code string.\n- `highlighter` (Get/Set) - The highlighter function, takes the current code string and returns the highlighted code as html string.\n- `tabsize` (Get/Set) The empty space counted as one tab.\n- `readonly` (Get/Set) Disable user input.\n- `linenumbers` (Get/Set) Show line numbers.\n- `expand` (Get/Set) Expand the text area to fit the content, only for newlines wont work for warping text.\n- `wrap` (Get/Set) Wrap the text area to fit the content.\n- `copyButton` (Get/Set) Show copy button.\n- `stylesheet` (Get/Set) The CSS style sheet selector for code styling, it can be a `link[rel=\"stylesheet\"]` or a `style` element.\n- `oneLine` (Get/Set) Mimic regular input element by forcing one line.\n\n**Events**\n\n- `change` Emitted when the value changes.\n- `copy-btn` Emitted when the copy button is clicked.\n\n**Slots**\n\n- `Default` The text content of the this slot children will be extracted and used as the initial code.\n- `header` Element to render in the header.\n- `footer` Element to render in the footer.\n\n**Attributes**\n\n- `\"value\"` The code string.\n- `\"readonly\"` Disable user input.\n- `\"tabsize\"` The empty space counted as one tab.\n- `\"stylesheet\"` The CSS style sheet selector for code styling, it can be a `link[rel=\"stylesheet\"]` or a `style` element.\n- `\"expand\"` Expand the text area to fit the content, only for newlines wont work for warping text.\n- `\"wrap\"` Wrap the text area to fit the content.\n- `\"linenumbers\"` Show line numbers.\n- `\"copy-button\"` Show copy button.\n- `\"one-line\"` Mimic regular input element by forcing one line.\n\n**CSS Properties**\n\n- `--font-family` The default font family of the code editor.\n- `--font-weight` The default font size of the code editor.\n- `--sz-font` The default font size of the code editor.\n- `--line-height` The default line height of the code editor.\n- `--clr-background` The default background color of the code editor.\n- `--clr-focused` The editor background when focused\n- `--clr-text-selection-bg` The background color of the selected text.\n- `--clr-text-selection-txt` The text color of the selected text.\n- `--clr-scrollbar` The color of the scrollbar.\n- `--clr-border` The color of the border.\n- `--sz-line-numbers-width` The width of the line numbers column.\n- `--clr-line-numbers-background` The background color of the line numbers.\n- `--clr-line-numbers-txt` The text color of the line numbers.\n- `--clr-line-numbers-active-txt` The background color of the active line number.\n- `--clr-active-line` The background color of the active line.\n- `--sz-padding` The padding of the code editor.\n- `--sz-border-radius` The border radius of the code editor.\n\n**CSS Parts**\n\n- `::part(wrapper)` The element that wrap [Header | Editor | Footer].\n- `::part(container)` The element that container [LineNumbers | Textarea/Highlight | CopyButton].\n- `::part(box)` The code editor box element (textarea and highlight elements).\n- `::part(textarea)` The code editor textarea element.\n- `::part(highlight)` The code editor highlight container element.\n- `::part(wrap-button)` The wrap button.\n- `::part(copy-button)` The copy button.\n\n**CSS States**\n\n- `:state(focus)`\n"
      },
      "attributes": [
        {
          "name": "value",
          "description": "The code string."
        },
        {
          "name": "readonly",
          "description": "Disable user input.",
          "values": [
            {
              "name": "true"
            },
            {
              "name": "false"
            }
          ]
        },
        {
          "name": "tabsize",
          "description": "The empty space counted as one tab."
        },
        {
          "name": "stylesheet",
          "description": "The CSS style sheet selector for code styling, it can be a `link[rel=\"stylesheet\"]` or a `style` element."
        },
        {
          "name": "expand",
          "description": "Expand the text area to fit the content, only for newlines wont work for warping text.",
          "values": [
            {
              "name": "true"
            },
            {
              "name": "false"
            }
          ]
        },
        {
          "name": "wrap",
          "description": "Wrap the text area to fit the content.",
          "values": [
            {
              "name": "true"
            },
            {
              "name": "false"
            }
          ]
        },
        {
          "name": "linenumbers",
          "description": "Show line numbers.",
          "values": [
            {
              "name": "true"
            },
            {
              "name": "false"
            }
          ]
        },
        {
          "name": "copy-button",
          "description": "Show copy button.",
          "values": [
            {
              "name": "true"
            },
            {
              "name": "false"
            }
          ]
        },
        {
          "name": "one-line",
          "description": "Mimic regular input element by forcing one line.",
          "values": [
            {
              "name": "true"
            },
            {
              "name": "false"
            }
          ]
        }
      ]
    }
  ]
}
